// Code generated by gotdgen, DO NOT EDIT.

package tdapi

import (
	"context"
	"errors"
	"fmt"
	"sort"
	"strings"

	"go.uber.org/multierr"

	"github.com/gotd/td/bin"
	"github.com/gotd/td/tdp"
	"github.com/gotd/td/tgerr"
)

// No-op definition for keeping imports.
var (
	_ = bin.Buffer{}
	_ = context.Background()
	_ = fmt.Stringer(nil)
	_ = strings.Builder{}
	_ = errors.Is
	_ = multierr.AppendInto
	_ = sort.Ints
	_ = tdp.Format
	_ = tgerr.Error{}
)

// DeleteAllRevokedChatInviteLinksRequest represents TL type `deleteAllRevokedChatInviteLinks#eac4f045`.
type DeleteAllRevokedChatInviteLinksRequest struct {
	// Chat identifier
	ChatID int64
	// User identifier of a chat administrator, which links will be deleted. Must be an
	// identifier of the current user for non-owner
	CreatorUserID int32
}

// DeleteAllRevokedChatInviteLinksRequestTypeID is TL type id of DeleteAllRevokedChatInviteLinksRequest.
const DeleteAllRevokedChatInviteLinksRequestTypeID = 0xeac4f045

// Ensuring interfaces in compile-time for DeleteAllRevokedChatInviteLinksRequest.
var (
	_ bin.Encoder     = &DeleteAllRevokedChatInviteLinksRequest{}
	_ bin.Decoder     = &DeleteAllRevokedChatInviteLinksRequest{}
	_ bin.BareEncoder = &DeleteAllRevokedChatInviteLinksRequest{}
	_ bin.BareDecoder = &DeleteAllRevokedChatInviteLinksRequest{}
)

func (d *DeleteAllRevokedChatInviteLinksRequest) Zero() bool {
	if d == nil {
		return true
	}
	if !(d.ChatID == 0) {
		return false
	}
	if !(d.CreatorUserID == 0) {
		return false
	}

	return true
}

// String implements fmt.Stringer.
func (d *DeleteAllRevokedChatInviteLinksRequest) String() string {
	if d == nil {
		return "DeleteAllRevokedChatInviteLinksRequest(nil)"
	}
	type Alias DeleteAllRevokedChatInviteLinksRequest
	return fmt.Sprintf("DeleteAllRevokedChatInviteLinksRequest%+v", Alias(*d))
}

// TypeID returns type id in TL schema.
//
// See https://core.telegram.org/mtproto/TL-tl#remarks.
func (*DeleteAllRevokedChatInviteLinksRequest) TypeID() uint32 {
	return DeleteAllRevokedChatInviteLinksRequestTypeID
}

// TypeName returns name of type in TL schema.
func (*DeleteAllRevokedChatInviteLinksRequest) TypeName() string {
	return "deleteAllRevokedChatInviteLinks"
}

// TypeInfo returns info about TL type.
func (d *DeleteAllRevokedChatInviteLinksRequest) TypeInfo() tdp.Type {
	typ := tdp.Type{
		Name: "deleteAllRevokedChatInviteLinks",
		ID:   DeleteAllRevokedChatInviteLinksRequestTypeID,
	}
	if d == nil {
		typ.Null = true
		return typ
	}
	typ.Fields = []tdp.Field{
		{
			Name:       "ChatID",
			SchemaName: "chat_id",
		},
		{
			Name:       "CreatorUserID",
			SchemaName: "creator_user_id",
		},
	}
	return typ
}

// Encode implements bin.Encoder.
func (d *DeleteAllRevokedChatInviteLinksRequest) Encode(b *bin.Buffer) error {
	if d == nil {
		return fmt.Errorf("can't encode deleteAllRevokedChatInviteLinks#eac4f045 as nil")
	}
	b.PutID(DeleteAllRevokedChatInviteLinksRequestTypeID)
	return d.EncodeBare(b)
}

// EncodeBare implements bin.BareEncoder.
func (d *DeleteAllRevokedChatInviteLinksRequest) EncodeBare(b *bin.Buffer) error {
	if d == nil {
		return fmt.Errorf("can't encode deleteAllRevokedChatInviteLinks#eac4f045 as nil")
	}
	b.PutLong(d.ChatID)
	b.PutInt32(d.CreatorUserID)
	return nil
}

// Decode implements bin.Decoder.
func (d *DeleteAllRevokedChatInviteLinksRequest) Decode(b *bin.Buffer) error {
	if d == nil {
		return fmt.Errorf("can't decode deleteAllRevokedChatInviteLinks#eac4f045 to nil")
	}
	if err := b.ConsumeID(DeleteAllRevokedChatInviteLinksRequestTypeID); err != nil {
		return fmt.Errorf("unable to decode deleteAllRevokedChatInviteLinks#eac4f045: %w", err)
	}
	return d.DecodeBare(b)
}

// DecodeBare implements bin.BareDecoder.
func (d *DeleteAllRevokedChatInviteLinksRequest) DecodeBare(b *bin.Buffer) error {
	if d == nil {
		return fmt.Errorf("can't decode deleteAllRevokedChatInviteLinks#eac4f045 to nil")
	}
	{
		value, err := b.Long()
		if err != nil {
			return fmt.Errorf("unable to decode deleteAllRevokedChatInviteLinks#eac4f045: field chat_id: %w", err)
		}
		d.ChatID = value
	}
	{
		value, err := b.Int32()
		if err != nil {
			return fmt.Errorf("unable to decode deleteAllRevokedChatInviteLinks#eac4f045: field creator_user_id: %w", err)
		}
		d.CreatorUserID = value
	}
	return nil
}

// GetChatID returns value of ChatID field.
func (d *DeleteAllRevokedChatInviteLinksRequest) GetChatID() (value int64) {
	return d.ChatID
}

// GetCreatorUserID returns value of CreatorUserID field.
func (d *DeleteAllRevokedChatInviteLinksRequest) GetCreatorUserID() (value int32) {
	return d.CreatorUserID
}

// DeleteAllRevokedChatInviteLinks invokes method deleteAllRevokedChatInviteLinks#eac4f045 returning error if any.
func (c *Client) DeleteAllRevokedChatInviteLinks(ctx context.Context, request *DeleteAllRevokedChatInviteLinksRequest) error {
	var ok Ok

	if err := c.rpc.Invoke(ctx, request, &ok); err != nil {
		return err
	}
	return nil
}
