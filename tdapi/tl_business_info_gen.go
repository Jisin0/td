// Code generated by gotdgen, DO NOT EDIT.

package tdapi

import (
	"context"
	"errors"
	"fmt"
	"sort"
	"strings"

	"go.uber.org/multierr"

	"github.com/gotd/td/bin"
	"github.com/gotd/td/tdjson"
	"github.com/gotd/td/tdp"
	"github.com/gotd/td/tgerr"
)

// No-op definition for keeping imports.
var (
	_ = bin.Buffer{}
	_ = context.Background()
	_ = fmt.Stringer(nil)
	_ = strings.Builder{}
	_ = errors.Is
	_ = multierr.AppendInto
	_ = sort.Ints
	_ = tdp.Format
	_ = tgerr.Error{}
	_ = tdjson.Encoder{}
)

// BusinessInfo represents TL type `businessInfo#4212a956`.
type BusinessInfo struct {
	// Location of the business; may be null if none
	Location BusinessLocation
	// Opening hours of the business; may be null if none. The hours are guaranteed to be
	// valid and has already been split by week days
	OpeningHours BusinessOpeningHours
	// The greeting message; may be null if none or the Business account is not of the
	// current user
	GreetingMessageSettings BusinessGreetingMessageSettings
	// The away message; may be null if none or the Business account is not of the current
	// user
	AwayMessageSettings BusinessAwayMessageSettings
	// Information about start page of the account; may be null if none
	StartPage BusinessStartPage
}

// BusinessInfoTypeID is TL type id of BusinessInfo.
const BusinessInfoTypeID = 0x4212a956

// Ensuring interfaces in compile-time for BusinessInfo.
var (
	_ bin.Encoder     = &BusinessInfo{}
	_ bin.Decoder     = &BusinessInfo{}
	_ bin.BareEncoder = &BusinessInfo{}
	_ bin.BareDecoder = &BusinessInfo{}
)

func (b *BusinessInfo) Zero() bool {
	if b == nil {
		return true
	}
	if !(b.Location.Zero()) {
		return false
	}
	if !(b.OpeningHours.Zero()) {
		return false
	}
	if !(b.GreetingMessageSettings.Zero()) {
		return false
	}
	if !(b.AwayMessageSettings.Zero()) {
		return false
	}
	if !(b.StartPage.Zero()) {
		return false
	}

	return true
}

// String implements fmt.Stringer.
func (b *BusinessInfo) String() string {
	if b == nil {
		return "BusinessInfo(nil)"
	}
	type Alias BusinessInfo
	return fmt.Sprintf("BusinessInfo%+v", Alias(*b))
}

// TypeID returns type id in TL schema.
//
// See https://core.telegram.org/mtproto/TL-tl#remarks.
func (*BusinessInfo) TypeID() uint32 {
	return BusinessInfoTypeID
}

// TypeName returns name of type in TL schema.
func (*BusinessInfo) TypeName() string {
	return "businessInfo"
}

// TypeInfo returns info about TL type.
func (b *BusinessInfo) TypeInfo() tdp.Type {
	typ := tdp.Type{
		Name: "businessInfo",
		ID:   BusinessInfoTypeID,
	}
	if b == nil {
		typ.Null = true
		return typ
	}
	typ.Fields = []tdp.Field{
		{
			Name:       "Location",
			SchemaName: "location",
		},
		{
			Name:       "OpeningHours",
			SchemaName: "opening_hours",
		},
		{
			Name:       "GreetingMessageSettings",
			SchemaName: "greeting_message_settings",
		},
		{
			Name:       "AwayMessageSettings",
			SchemaName: "away_message_settings",
		},
		{
			Name:       "StartPage",
			SchemaName: "start_page",
		},
	}
	return typ
}

// Encode implements bin.Encoder.
func (b *BusinessInfo) Encode(buf *bin.Buffer) error {
	if b == nil {
		return fmt.Errorf("can't encode businessInfo#4212a956 as nil")
	}
	buf.PutID(BusinessInfoTypeID)
	return b.EncodeBare(buf)
}

// EncodeBare implements bin.BareEncoder.
func (b *BusinessInfo) EncodeBare(buf *bin.Buffer) error {
	if b == nil {
		return fmt.Errorf("can't encode businessInfo#4212a956 as nil")
	}
	if err := b.Location.Encode(buf); err != nil {
		return fmt.Errorf("unable to encode businessInfo#4212a956: field location: %w", err)
	}
	if err := b.OpeningHours.Encode(buf); err != nil {
		return fmt.Errorf("unable to encode businessInfo#4212a956: field opening_hours: %w", err)
	}
	if err := b.GreetingMessageSettings.Encode(buf); err != nil {
		return fmt.Errorf("unable to encode businessInfo#4212a956: field greeting_message_settings: %w", err)
	}
	if err := b.AwayMessageSettings.Encode(buf); err != nil {
		return fmt.Errorf("unable to encode businessInfo#4212a956: field away_message_settings: %w", err)
	}
	if err := b.StartPage.Encode(buf); err != nil {
		return fmt.Errorf("unable to encode businessInfo#4212a956: field start_page: %w", err)
	}
	return nil
}

// Decode implements bin.Decoder.
func (b *BusinessInfo) Decode(buf *bin.Buffer) error {
	if b == nil {
		return fmt.Errorf("can't decode businessInfo#4212a956 to nil")
	}
	if err := buf.ConsumeID(BusinessInfoTypeID); err != nil {
		return fmt.Errorf("unable to decode businessInfo#4212a956: %w", err)
	}
	return b.DecodeBare(buf)
}

// DecodeBare implements bin.BareDecoder.
func (b *BusinessInfo) DecodeBare(buf *bin.Buffer) error {
	if b == nil {
		return fmt.Errorf("can't decode businessInfo#4212a956 to nil")
	}
	{
		if err := b.Location.Decode(buf); err != nil {
			return fmt.Errorf("unable to decode businessInfo#4212a956: field location: %w", err)
		}
	}
	{
		if err := b.OpeningHours.Decode(buf); err != nil {
			return fmt.Errorf("unable to decode businessInfo#4212a956: field opening_hours: %w", err)
		}
	}
	{
		if err := b.GreetingMessageSettings.Decode(buf); err != nil {
			return fmt.Errorf("unable to decode businessInfo#4212a956: field greeting_message_settings: %w", err)
		}
	}
	{
		if err := b.AwayMessageSettings.Decode(buf); err != nil {
			return fmt.Errorf("unable to decode businessInfo#4212a956: field away_message_settings: %w", err)
		}
	}
	{
		if err := b.StartPage.Decode(buf); err != nil {
			return fmt.Errorf("unable to decode businessInfo#4212a956: field start_page: %w", err)
		}
	}
	return nil
}

// EncodeTDLibJSON implements tdjson.TDLibEncoder.
func (b *BusinessInfo) EncodeTDLibJSON(buf tdjson.Encoder) error {
	if b == nil {
		return fmt.Errorf("can't encode businessInfo#4212a956 as nil")
	}
	buf.ObjStart()
	buf.PutID("businessInfo")
	buf.Comma()
	buf.FieldStart("location")
	if err := b.Location.EncodeTDLibJSON(buf); err != nil {
		return fmt.Errorf("unable to encode businessInfo#4212a956: field location: %w", err)
	}
	buf.Comma()
	buf.FieldStart("opening_hours")
	if err := b.OpeningHours.EncodeTDLibJSON(buf); err != nil {
		return fmt.Errorf("unable to encode businessInfo#4212a956: field opening_hours: %w", err)
	}
	buf.Comma()
	buf.FieldStart("greeting_message_settings")
	if err := b.GreetingMessageSettings.EncodeTDLibJSON(buf); err != nil {
		return fmt.Errorf("unable to encode businessInfo#4212a956: field greeting_message_settings: %w", err)
	}
	buf.Comma()
	buf.FieldStart("away_message_settings")
	if err := b.AwayMessageSettings.EncodeTDLibJSON(buf); err != nil {
		return fmt.Errorf("unable to encode businessInfo#4212a956: field away_message_settings: %w", err)
	}
	buf.Comma()
	buf.FieldStart("start_page")
	if err := b.StartPage.EncodeTDLibJSON(buf); err != nil {
		return fmt.Errorf("unable to encode businessInfo#4212a956: field start_page: %w", err)
	}
	buf.Comma()
	buf.StripComma()
	buf.ObjEnd()
	return nil
}

// DecodeTDLibJSON implements tdjson.TDLibDecoder.
func (b *BusinessInfo) DecodeTDLibJSON(buf tdjson.Decoder) error {
	if b == nil {
		return fmt.Errorf("can't decode businessInfo#4212a956 to nil")
	}

	return buf.Obj(func(buf tdjson.Decoder, key []byte) error {
		switch string(key) {
		case tdjson.TypeField:
			if err := buf.ConsumeID("businessInfo"); err != nil {
				return fmt.Errorf("unable to decode businessInfo#4212a956: %w", err)
			}
		case "location":
			if err := b.Location.DecodeTDLibJSON(buf); err != nil {
				return fmt.Errorf("unable to decode businessInfo#4212a956: field location: %w", err)
			}
		case "opening_hours":
			if err := b.OpeningHours.DecodeTDLibJSON(buf); err != nil {
				return fmt.Errorf("unable to decode businessInfo#4212a956: field opening_hours: %w", err)
			}
		case "greeting_message_settings":
			if err := b.GreetingMessageSettings.DecodeTDLibJSON(buf); err != nil {
				return fmt.Errorf("unable to decode businessInfo#4212a956: field greeting_message_settings: %w", err)
			}
		case "away_message_settings":
			if err := b.AwayMessageSettings.DecodeTDLibJSON(buf); err != nil {
				return fmt.Errorf("unable to decode businessInfo#4212a956: field away_message_settings: %w", err)
			}
		case "start_page":
			if err := b.StartPage.DecodeTDLibJSON(buf); err != nil {
				return fmt.Errorf("unable to decode businessInfo#4212a956: field start_page: %w", err)
			}
		default:
			return buf.Skip()
		}
		return nil
	})
}

// GetLocation returns value of Location field.
func (b *BusinessInfo) GetLocation() (value BusinessLocation) {
	if b == nil {
		return
	}
	return b.Location
}

// GetOpeningHours returns value of OpeningHours field.
func (b *BusinessInfo) GetOpeningHours() (value BusinessOpeningHours) {
	if b == nil {
		return
	}
	return b.OpeningHours
}

// GetGreetingMessageSettings returns value of GreetingMessageSettings field.
func (b *BusinessInfo) GetGreetingMessageSettings() (value BusinessGreetingMessageSettings) {
	if b == nil {
		return
	}
	return b.GreetingMessageSettings
}

// GetAwayMessageSettings returns value of AwayMessageSettings field.
func (b *BusinessInfo) GetAwayMessageSettings() (value BusinessAwayMessageSettings) {
	if b == nil {
		return
	}
	return b.AwayMessageSettings
}

// GetStartPage returns value of StartPage field.
func (b *BusinessInfo) GetStartPage() (value BusinessStartPage) {
	if b == nil {
		return
	}
	return b.StartPage
}
