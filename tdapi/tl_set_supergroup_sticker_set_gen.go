// Code generated by gotdgen, DO NOT EDIT.

package tdapi

import (
	"context"
	"errors"
	"fmt"
	"sort"
	"strings"

	"go.uber.org/multierr"

	"github.com/gotd/td/bin"
	"github.com/gotd/td/tdp"
	"github.com/gotd/td/tgerr"
)

// No-op definition for keeping imports.
var (
	_ = bin.Buffer{}
	_ = context.Background()
	_ = fmt.Stringer(nil)
	_ = strings.Builder{}
	_ = errors.Is
	_ = multierr.AppendInto
	_ = sort.Ints
	_ = tdp.Format
	_ = tgerr.Error{}
)

// SetSupergroupStickerSetRequest represents TL type `setSupergroupStickerSet#ee5eb866`.
type SetSupergroupStickerSetRequest struct {
	// Identifier of the supergroup
	SupergroupID int32
	// New value of the supergroup sticker set identifier. Use 0 to remove the supergroup
	// sticker set
	StickerSetID Int64
}

// SetSupergroupStickerSetRequestTypeID is TL type id of SetSupergroupStickerSetRequest.
const SetSupergroupStickerSetRequestTypeID = 0xee5eb866

// Ensuring interfaces in compile-time for SetSupergroupStickerSetRequest.
var (
	_ bin.Encoder     = &SetSupergroupStickerSetRequest{}
	_ bin.Decoder     = &SetSupergroupStickerSetRequest{}
	_ bin.BareEncoder = &SetSupergroupStickerSetRequest{}
	_ bin.BareDecoder = &SetSupergroupStickerSetRequest{}
)

func (s *SetSupergroupStickerSetRequest) Zero() bool {
	if s == nil {
		return true
	}
	if !(s.SupergroupID == 0) {
		return false
	}
	if !(s.StickerSetID.Zero()) {
		return false
	}

	return true
}

// String implements fmt.Stringer.
func (s *SetSupergroupStickerSetRequest) String() string {
	if s == nil {
		return "SetSupergroupStickerSetRequest(nil)"
	}
	type Alias SetSupergroupStickerSetRequest
	return fmt.Sprintf("SetSupergroupStickerSetRequest%+v", Alias(*s))
}

// TypeID returns type id in TL schema.
//
// See https://core.telegram.org/mtproto/TL-tl#remarks.
func (*SetSupergroupStickerSetRequest) TypeID() uint32 {
	return SetSupergroupStickerSetRequestTypeID
}

// TypeName returns name of type in TL schema.
func (*SetSupergroupStickerSetRequest) TypeName() string {
	return "setSupergroupStickerSet"
}

// TypeInfo returns info about TL type.
func (s *SetSupergroupStickerSetRequest) TypeInfo() tdp.Type {
	typ := tdp.Type{
		Name: "setSupergroupStickerSet",
		ID:   SetSupergroupStickerSetRequestTypeID,
	}
	if s == nil {
		typ.Null = true
		return typ
	}
	typ.Fields = []tdp.Field{
		{
			Name:       "SupergroupID",
			SchemaName: "supergroup_id",
		},
		{
			Name:       "StickerSetID",
			SchemaName: "sticker_set_id",
		},
	}
	return typ
}

// Encode implements bin.Encoder.
func (s *SetSupergroupStickerSetRequest) Encode(b *bin.Buffer) error {
	if s == nil {
		return fmt.Errorf("can't encode setSupergroupStickerSet#ee5eb866 as nil")
	}
	b.PutID(SetSupergroupStickerSetRequestTypeID)
	return s.EncodeBare(b)
}

// EncodeBare implements bin.BareEncoder.
func (s *SetSupergroupStickerSetRequest) EncodeBare(b *bin.Buffer) error {
	if s == nil {
		return fmt.Errorf("can't encode setSupergroupStickerSet#ee5eb866 as nil")
	}
	b.PutInt32(s.SupergroupID)
	if err := s.StickerSetID.Encode(b); err != nil {
		return fmt.Errorf("unable to encode setSupergroupStickerSet#ee5eb866: field sticker_set_id: %w", err)
	}
	return nil
}

// Decode implements bin.Decoder.
func (s *SetSupergroupStickerSetRequest) Decode(b *bin.Buffer) error {
	if s == nil {
		return fmt.Errorf("can't decode setSupergroupStickerSet#ee5eb866 to nil")
	}
	if err := b.ConsumeID(SetSupergroupStickerSetRequestTypeID); err != nil {
		return fmt.Errorf("unable to decode setSupergroupStickerSet#ee5eb866: %w", err)
	}
	return s.DecodeBare(b)
}

// DecodeBare implements bin.BareDecoder.
func (s *SetSupergroupStickerSetRequest) DecodeBare(b *bin.Buffer) error {
	if s == nil {
		return fmt.Errorf("can't decode setSupergroupStickerSet#ee5eb866 to nil")
	}
	{
		value, err := b.Int32()
		if err != nil {
			return fmt.Errorf("unable to decode setSupergroupStickerSet#ee5eb866: field supergroup_id: %w", err)
		}
		s.SupergroupID = value
	}
	{
		if err := s.StickerSetID.Decode(b); err != nil {
			return fmt.Errorf("unable to decode setSupergroupStickerSet#ee5eb866: field sticker_set_id: %w", err)
		}
	}
	return nil
}

// GetSupergroupID returns value of SupergroupID field.
func (s *SetSupergroupStickerSetRequest) GetSupergroupID() (value int32) {
	return s.SupergroupID
}

// GetStickerSetID returns value of StickerSetID field.
func (s *SetSupergroupStickerSetRequest) GetStickerSetID() (value Int64) {
	return s.StickerSetID
}

// SetSupergroupStickerSet invokes method setSupergroupStickerSet#ee5eb866 returning error if any.
func (c *Client) SetSupergroupStickerSet(ctx context.Context, request *SetSupergroupStickerSetRequest) error {
	var ok Ok

	if err := c.rpc.Invoke(ctx, request, &ok); err != nil {
		return err
	}
	return nil
}
