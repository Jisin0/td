// Code generated by gotdgen, DO NOT EDIT.

package tg

import (
	"context"
	"errors"
	"fmt"
	"sort"
	"strings"

	"go.uber.org/multierr"

	"github.com/gotd/td/bin"
	"github.com/gotd/td/tdjson"
	"github.com/gotd/td/tdp"
	"github.com/gotd/td/tgerr"
)

// No-op definition for keeping imports.
var (
	_ = bin.Buffer{}
	_ = context.Background()
	_ = fmt.Stringer(nil)
	_ = strings.Builder{}
	_ = errors.Is
	_ = multierr.AppendInto
	_ = sort.Ints
	_ = tdp.Format
	_ = tgerr.Error{}
	_ = tdjson.Encoder{}
)

// SmsjobsEligibleToJoin represents TL type `smsjobs.eligibleToJoin#dc8b44cf`.
//
// See https://core.telegram.org/constructor/smsjobs.eligibleToJoin for reference.
type SmsjobsEligibleToJoin struct {
	// TermsURL field of SmsjobsEligibleToJoin.
	TermsURL string
	// MonthlySentSMS field of SmsjobsEligibleToJoin.
	MonthlySentSMS int
}

// SmsjobsEligibleToJoinTypeID is TL type id of SmsjobsEligibleToJoin.
const SmsjobsEligibleToJoinTypeID = 0xdc8b44cf

// Ensuring interfaces in compile-time for SmsjobsEligibleToJoin.
var (
	_ bin.Encoder     = &SmsjobsEligibleToJoin{}
	_ bin.Decoder     = &SmsjobsEligibleToJoin{}
	_ bin.BareEncoder = &SmsjobsEligibleToJoin{}
	_ bin.BareDecoder = &SmsjobsEligibleToJoin{}
)

func (e *SmsjobsEligibleToJoin) Zero() bool {
	if e == nil {
		return true
	}
	if !(e.TermsURL == "") {
		return false
	}
	if !(e.MonthlySentSMS == 0) {
		return false
	}

	return true
}

// String implements fmt.Stringer.
func (e *SmsjobsEligibleToJoin) String() string {
	if e == nil {
		return "SmsjobsEligibleToJoin(nil)"
	}
	type Alias SmsjobsEligibleToJoin
	return fmt.Sprintf("SmsjobsEligibleToJoin%+v", Alias(*e))
}

// FillFrom fills SmsjobsEligibleToJoin from given interface.
func (e *SmsjobsEligibleToJoin) FillFrom(from interface {
	GetTermsURL() (value string)
	GetMonthlySentSMS() (value int)
}) {
	e.TermsURL = from.GetTermsURL()
	e.MonthlySentSMS = from.GetMonthlySentSMS()
}

// TypeID returns type id in TL schema.
//
// See https://core.telegram.org/mtproto/TL-tl#remarks.
func (*SmsjobsEligibleToJoin) TypeID() uint32 {
	return SmsjobsEligibleToJoinTypeID
}

// TypeName returns name of type in TL schema.
func (*SmsjobsEligibleToJoin) TypeName() string {
	return "smsjobs.eligibleToJoin"
}

// TypeInfo returns info about TL type.
func (e *SmsjobsEligibleToJoin) TypeInfo() tdp.Type {
	typ := tdp.Type{
		Name: "smsjobs.eligibleToJoin",
		ID:   SmsjobsEligibleToJoinTypeID,
	}
	if e == nil {
		typ.Null = true
		return typ
	}
	typ.Fields = []tdp.Field{
		{
			Name:       "TermsURL",
			SchemaName: "terms_url",
		},
		{
			Name:       "MonthlySentSMS",
			SchemaName: "monthly_sent_sms",
		},
	}
	return typ
}

// Encode implements bin.Encoder.
func (e *SmsjobsEligibleToJoin) Encode(b *bin.Buffer) error {
	if e == nil {
		return fmt.Errorf("can't encode smsjobs.eligibleToJoin#dc8b44cf as nil")
	}
	b.PutID(SmsjobsEligibleToJoinTypeID)
	return e.EncodeBare(b)
}

// EncodeBare implements bin.BareEncoder.
func (e *SmsjobsEligibleToJoin) EncodeBare(b *bin.Buffer) error {
	if e == nil {
		return fmt.Errorf("can't encode smsjobs.eligibleToJoin#dc8b44cf as nil")
	}
	b.PutString(e.TermsURL)
	b.PutInt(e.MonthlySentSMS)
	return nil
}

// Decode implements bin.Decoder.
func (e *SmsjobsEligibleToJoin) Decode(b *bin.Buffer) error {
	if e == nil {
		return fmt.Errorf("can't decode smsjobs.eligibleToJoin#dc8b44cf to nil")
	}
	if err := b.ConsumeID(SmsjobsEligibleToJoinTypeID); err != nil {
		return fmt.Errorf("unable to decode smsjobs.eligibleToJoin#dc8b44cf: %w", err)
	}
	return e.DecodeBare(b)
}

// DecodeBare implements bin.BareDecoder.
func (e *SmsjobsEligibleToJoin) DecodeBare(b *bin.Buffer) error {
	if e == nil {
		return fmt.Errorf("can't decode smsjobs.eligibleToJoin#dc8b44cf to nil")
	}
	{
		value, err := b.String()
		if err != nil {
			return fmt.Errorf("unable to decode smsjobs.eligibleToJoin#dc8b44cf: field terms_url: %w", err)
		}
		e.TermsURL = value
	}
	{
		value, err := b.Int()
		if err != nil {
			return fmt.Errorf("unable to decode smsjobs.eligibleToJoin#dc8b44cf: field monthly_sent_sms: %w", err)
		}
		e.MonthlySentSMS = value
	}
	return nil
}

// GetTermsURL returns value of TermsURL field.
func (e *SmsjobsEligibleToJoin) GetTermsURL() (value string) {
	if e == nil {
		return
	}
	return e.TermsURL
}

// GetMonthlySentSMS returns value of MonthlySentSMS field.
func (e *SmsjobsEligibleToJoin) GetMonthlySentSMS() (value int) {
	if e == nil {
		return
	}
	return e.MonthlySentSMS
}
