// Code generated by gotdgen, DO NOT EDIT.

package tg

import (
	"context"
	"errors"
	"fmt"
	"sort"
	"strings"

	"go.uber.org/multierr"

	"github.com/gotd/td/bin"
	"github.com/gotd/td/tdjson"
	"github.com/gotd/td/tdp"
	"github.com/gotd/td/tgerr"
)

// No-op definition for keeping imports.
var (
	_ = bin.Buffer{}
	_ = context.Background()
	_ = fmt.Stringer(nil)
	_ = strings.Builder{}
	_ = errors.Is
	_ = multierr.AppendInto
	_ = sort.Ints
	_ = tdp.Format
	_ = tgerr.Error{}
	_ = tdjson.Encoder{}
)

// SmsjobsFinishJobRequest represents TL type `smsjobs.finishJob#4f1ebf24`.
//
// See https://core.telegram.org/method/smsjobs.finishJob for reference.
type SmsjobsFinishJobRequest struct {
	// Flags field of SmsjobsFinishJobRequest.
	Flags bin.Fields
	// JobID field of SmsjobsFinishJobRequest.
	JobID string
	// Error field of SmsjobsFinishJobRequest.
	//
	// Use SetError and GetError helpers.
	Error string
}

// SmsjobsFinishJobRequestTypeID is TL type id of SmsjobsFinishJobRequest.
const SmsjobsFinishJobRequestTypeID = 0x4f1ebf24

// Ensuring interfaces in compile-time for SmsjobsFinishJobRequest.
var (
	_ bin.Encoder     = &SmsjobsFinishJobRequest{}
	_ bin.Decoder     = &SmsjobsFinishJobRequest{}
	_ bin.BareEncoder = &SmsjobsFinishJobRequest{}
	_ bin.BareDecoder = &SmsjobsFinishJobRequest{}
)

func (f *SmsjobsFinishJobRequest) Zero() bool {
	if f == nil {
		return true
	}
	if !(f.Flags.Zero()) {
		return false
	}
	if !(f.JobID == "") {
		return false
	}
	if !(f.Error == "") {
		return false
	}

	return true
}

// String implements fmt.Stringer.
func (f *SmsjobsFinishJobRequest) String() string {
	if f == nil {
		return "SmsjobsFinishJobRequest(nil)"
	}
	type Alias SmsjobsFinishJobRequest
	return fmt.Sprintf("SmsjobsFinishJobRequest%+v", Alias(*f))
}

// FillFrom fills SmsjobsFinishJobRequest from given interface.
func (f *SmsjobsFinishJobRequest) FillFrom(from interface {
	GetJobID() (value string)
	GetError() (value string, ok bool)
}) {
	f.JobID = from.GetJobID()
	if val, ok := from.GetError(); ok {
		f.Error = val
	}

}

// TypeID returns type id in TL schema.
//
// See https://core.telegram.org/mtproto/TL-tl#remarks.
func (*SmsjobsFinishJobRequest) TypeID() uint32 {
	return SmsjobsFinishJobRequestTypeID
}

// TypeName returns name of type in TL schema.
func (*SmsjobsFinishJobRequest) TypeName() string {
	return "smsjobs.finishJob"
}

// TypeInfo returns info about TL type.
func (f *SmsjobsFinishJobRequest) TypeInfo() tdp.Type {
	typ := tdp.Type{
		Name: "smsjobs.finishJob",
		ID:   SmsjobsFinishJobRequestTypeID,
	}
	if f == nil {
		typ.Null = true
		return typ
	}
	typ.Fields = []tdp.Field{
		{
			Name:       "JobID",
			SchemaName: "job_id",
		},
		{
			Name:       "Error",
			SchemaName: "error",
			Null:       !f.Flags.Has(0),
		},
	}
	return typ
}

// SetFlags sets flags for non-zero fields.
func (f *SmsjobsFinishJobRequest) SetFlags() {
	if !(f.Error == "") {
		f.Flags.Set(0)
	}
}

// Encode implements bin.Encoder.
func (f *SmsjobsFinishJobRequest) Encode(b *bin.Buffer) error {
	if f == nil {
		return fmt.Errorf("can't encode smsjobs.finishJob#4f1ebf24 as nil")
	}
	b.PutID(SmsjobsFinishJobRequestTypeID)
	return f.EncodeBare(b)
}

// EncodeBare implements bin.BareEncoder.
func (f *SmsjobsFinishJobRequest) EncodeBare(b *bin.Buffer) error {
	if f == nil {
		return fmt.Errorf("can't encode smsjobs.finishJob#4f1ebf24 as nil")
	}
	f.SetFlags()
	if err := f.Flags.Encode(b); err != nil {
		return fmt.Errorf("unable to encode smsjobs.finishJob#4f1ebf24: field flags: %w", err)
	}
	b.PutString(f.JobID)
	if f.Flags.Has(0) {
		b.PutString(f.Error)
	}
	return nil
}

// Decode implements bin.Decoder.
func (f *SmsjobsFinishJobRequest) Decode(b *bin.Buffer) error {
	if f == nil {
		return fmt.Errorf("can't decode smsjobs.finishJob#4f1ebf24 to nil")
	}
	if err := b.ConsumeID(SmsjobsFinishJobRequestTypeID); err != nil {
		return fmt.Errorf("unable to decode smsjobs.finishJob#4f1ebf24: %w", err)
	}
	return f.DecodeBare(b)
}

// DecodeBare implements bin.BareDecoder.
func (f *SmsjobsFinishJobRequest) DecodeBare(b *bin.Buffer) error {
	if f == nil {
		return fmt.Errorf("can't decode smsjobs.finishJob#4f1ebf24 to nil")
	}
	{
		if err := f.Flags.Decode(b); err != nil {
			return fmt.Errorf("unable to decode smsjobs.finishJob#4f1ebf24: field flags: %w", err)
		}
	}
	{
		value, err := b.String()
		if err != nil {
			return fmt.Errorf("unable to decode smsjobs.finishJob#4f1ebf24: field job_id: %w", err)
		}
		f.JobID = value
	}
	if f.Flags.Has(0) {
		value, err := b.String()
		if err != nil {
			return fmt.Errorf("unable to decode smsjobs.finishJob#4f1ebf24: field error: %w", err)
		}
		f.Error = value
	}
	return nil
}

// GetJobID returns value of JobID field.
func (f *SmsjobsFinishJobRequest) GetJobID() (value string) {
	if f == nil {
		return
	}
	return f.JobID
}

// SetError sets value of Error conditional field.
func (f *SmsjobsFinishJobRequest) SetError(value string) {
	f.Flags.Set(0)
	f.Error = value
}

// GetError returns value of Error conditional field and
// boolean which is true if field was set.
func (f *SmsjobsFinishJobRequest) GetError() (value string, ok bool) {
	if f == nil {
		return
	}
	if !f.Flags.Has(0) {
		return value, false
	}
	return f.Error, true
}

// SmsjobsFinishJob invokes method smsjobs.finishJob#4f1ebf24 returning error if any.
//
// See https://core.telegram.org/method/smsjobs.finishJob for reference.
func (c *Client) SmsjobsFinishJob(ctx context.Context, request *SmsjobsFinishJobRequest) (bool, error) {
	var result BoolBox

	if err := c.rpc.Invoke(ctx, request, &result); err != nil {
		return false, err
	}
	_, ok := result.Bool.(*BoolTrue)
	return ok, nil
}
